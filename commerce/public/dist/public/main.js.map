{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/show/show.component.css","webpack:///./src/app/show/show.component.html","webpack:///./src/app/show/show.component.ts","webpack:///./src/app/update/update.component.css","webpack:///./src/app/update/update.component.html","webpack:///./src/app/update/update.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductsComponent } from './products/products.component';\nimport { NewComponent } from './new/new.component';\nimport { ShowComponent } from './show/show.component';\nimport { UpdateComponent } from './update/update.component';\n\n\nconst routes: Routes = [\n  {path: 'products', component: ProductsComponent},\n  {path: '', pathMatch: 'full', redirectTo: 'products'},\n  {path: 'products/new', component: NewComponent},\n  {path: 'products/:id', component: ShowComponent},\n  {path: 'products/:id/edit', component:UpdateComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\n\\n<div id='wrapper'>\\n  <h1>{{title}}</h1>\\n  <ul class='nav'>\\n    <li><button class='navitem' [routerLink]='[\\\"/products\\\"]'>Home</button></li>\\n    <li><button class='navitem' [routerLink]='[\\\"/products/new\\\"]'>Add</button></li>\\n  </ul>\\n\\n  <fieldset>\\n    <router-outlet></router-outlet>\\n  </fieldset>\\n\\n  <ul class='footer'>\\n    <li class='footitem'>Questions?</li>\\n    <li class='footitem'>Email: mcarterartistry@gmail.com</li>\\n    <li class='footitem'>Phone: (844) 446-3656</li>\\n    <li class='footitem'>Address: 175 E Olive Ave, Burbank, CA, 91052</li>\\n  </ul>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CartMe';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductsComponent } from './products/products.component';\nimport { NewComponent } from './new/new.component';\nimport { ShowComponent } from './show/show.component';\nimport { UpdateComponent } from './update/update.component';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpService } from './http.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    NewComponent,\n    ShowComponent,\n    UpdateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http:HttpClient) { }\n\n  getProd(){\n    console.log('getProd() in http.service called');\n    return this._http.get('/api/products');\n  }\n  newProd(prodObj:object){\n    console.log('newProd() in http.service called');\n    return this._http.post('/api/products/new', prodObj);\n  }\n  findProd(id:string){\n    console.log('findProd() in http.service called');\n    return this._http.get('/api/products/'+id);\n  }\n  updateProd(id:string, prodObj: object){\n    console.log('updateProd() in http.service called');\n    return this._http.put('/api/products/'+id+'/edit', prodObj);\n  }\n  nixProd(id:string){\n    console.log('nixProd() in http.service called');\n    return this._http.delete('/api/products/'+id);\n  }\n}","module.exports = \"\"","module.exports = \"<fieldset>\\n  <h2>Add to Inventory</h2>\\n  <form id='newProd' (submit)='addProd()'>\\n      \\n      <!-- Inputs -->\\n   \\n    <p>Product Name: <input type='text' name='name' [(ngModel)]='newProduct.name'></p>\\n    <p>Quantity: <input type='number' name='qty' [(ngModel)]='newProduct.qty'></p>\\n    <p>Price: <input type='number' name='price' [(ngModel)]='newProduct.price'></p>\\n    <p>Image URL: <input type='string' name='img' [(ngModel)]='newProduct.img'></p>\\n\\n      <!-- Errors -->\\n\\n    <p class='errors' *ngIf='newProduct.name.length < 3'>Product name must be at least 3 characters long</p>\\n    <p class='errors' *ngIf='newProduct.qty < 0 '>Product quantity must be at least 0</p>\\n    <p class='errors' *ngIf='newProduct.price <=0 '>Product price must be at least 0</p>\\n    <p class='errors' *ngIf='newProduct.img.length <=0 '>Product image url must be present</p>\\n      \\n      <!-- Submission -->\\n \\n    <div id = 'buttons'>\\n      <button [routerLink]=\\\"['/']\\\" id='cancel'>Cancel</button>\\n      <button id='register' type='submit' [disabled]=\\\"newProduct.name.length < 3 || newProduct.qty < 0 || newProduct.price < 0 || newProduct.img.length < 3\\\">Register</button>\\n    \\n    \\n    </div>\\n  </form>\\n</fieldset>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  newProduct:any;\n  products = [];\n  constructor(private _httpService: HttpService, private _router: Router) { }\n\n  ngOnInit() {\n    this.newProduct = {name: '', qty:'', price:'', img:''};\n  }\n  addProd(){\n    console.log('Received ' +this.newProduct.name+ ', ' +this.newProduct.qty + ', '+this.newProduct.price + ', and' +this.newProduct.img +' url from product in new.html');\n\n    var tempObservable = this._httpService.newProd(this.newProduct);\n\n    tempObservable.subscribe((data:any)=>{\n      console.log('received product data from DB', data);\n      this.products = data;\n      this._router.navigate(['/products']);\n    })\n  }\n  getProd(){\n    console.log('getProd invoked by homepage');\n    var tempObservable = this._httpService.getProd();\n    tempObservable.subscribe((data:any)=>{\n      console.log('got data', data);\n      this.products = data;\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<h2>Product List</h2>\\n\\n<table>\\n  <thead>\\n    <th>id</th>\\n    <th>Url</th>\\n    <th>Name</th>\\n    <th>Qty</th>\\n    <th>Price</th>\\n    <th>Actions</th>\\n  </thead>\\n  <tr *ngFor='let product of products'>\\n    <td>{{product._id}}</td>\\n    <td>{{product.img}}</td>\\n    <td>{{product.name}}</td>\\n    <td>{{product.qty}}</td>\\n    <td>{{product.price}}</td>\\n    <td>\\n      <button id='smledit' [routerLink]=\\\"['/products/'+product._id+'/edit']\\\">Edit</button>\\n      <button id='smldet' [routerLink]=\\\"['/products/'+product._id]\\\">Details</button>\\n    </td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\n// import { getCurrentSanitizer } from '@angular/core/src/render3/instructions';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  title=\"CartMe\";\n  newProduct = {_id: '', name: '', qty: '', price: '', img: ''};\n  products = [];\n\n  constructor(private _httpService: HttpService, private _router:Router) { }\n\n  ngOnInit() {\n    console.log('onInit in home component');\n    this.getProd();\n  }\n\n  getProd(){\n    console.log('getProd invoked by homepage');\n    var tempObservable = this._httpService.getProd();\n    tempObservable.subscribe((data:any)=>{\n      console.log('got data', data);\n      this.products = data;\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<h3>{{product.name}}</h3>\\n<div id='spacer'><img src='assets/img/'+{{product.img}}></div>\\n<p class='errors' *ngIf='product.qty > 0'>To delete a product, the Qty must be <span class='attn'>0</span>.</p>\\n<table>\\n  <tr>\\n    <td><h3>Name</h3></td>\\n    <td><p>{{product.name}}</p></td>\\n  </tr>\\n  <tr>\\n    <td><h3>Qty</h3></td>\\n    <td>{{product.qty}}</td>\\n  </tr>\\n  <tr>\\n    <td><h3>Price</h3></td>\\n    <td>${{product.price}}</td>\\n  </tr>\\n  </table>\\n  <p>{{product.img}}</p>\\n  <div id='center'>\\n    <button [routerLink]=\\\"['/']\\\" id='cancel'>Back</button>\\n    <button [disabled]=\\\"product.qty != 0\\\" (click)=\\\"nixProd(product._id)\\\">Delete</button>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-show',\n  templateUrl: './show.component.html',\n  styleUrls: ['./show.component.css']\n})\nexport class ShowComponent implements OnInit {\n  title=\"CartMe\";\n  products = {_id:'', name: '', qty: '', price: '', img: ''};\n  product = [];\n\n  constructor(private _httpService: HttpService, private _route:ActivatedRoute, private _router: Router) { }\n\n  ngOnInit() {\n    console.log('onInit in show component');\n    this._route.params.subscribe((params)=>{\n      var id=params.id;\n      var tempObservable = this._httpService.findProd(id);\n      tempObservable.subscribe((data:any)=>{\n        this.product = data;\n        console.log('Data received by show OnInit was: ', data);\n      })\n    })\n  }\n  nixProd(id){\n    console.log('nixProd invoked by show');\n    var tempObservable = this._httpService.nixProd(id);\n    tempObservable.subscribe((data:any)=>{\n    console.log('got data', data);\n    this._router.navigate(['/products'])\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<div id='error_messages'>\\n  <p class='errors' *ngIf='product.name.length < 3'>Product name must be at least 3 characters long</p>\\n  <p class='errors' *ngIf='product.qty < 0'>Product qty must be greater than or equal to 0</p>\\n  <p class='errors' *ngIf='product.price <= 0'>Product price must be greater than 0</p>\\n  <p class='errors' *ngIf='product.img.length < 3'>Product image url must have a longer name.</p>\\n</div>\\n<form id='updateProd' (submit)='fixProd()'>\\n    <p>Product Name: <input type='text' name='name' [(ngModel)]='product.name'></p>\\n    <p>Quantity: <input type='number' name='qty' [(ngModel)]='product.qty'></p>\\n    <p>Price: <input type='number' name='price' [(ngModel)]='product.price'></p>\\n    <p>Image URL: <input type='text' name='img' [(ngModel)]='product.img'></p>\\n    <button id='edit' [disabled]='product.qty < 0 || product.name.length < 3 || product.price <= 0 || product.img == \\\"./../img/\\\" || product.img.length < 3' type='submit'>Save</button>\\n  </form>\\n  <button (click)=\\\"reset()\\\">Reset</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n  title=\"CartMe\";\n  product = {_id:'', name: '', qty: '', price: '', img: ''};\n  products = [];\n\n  constructor(private _httpService:HttpService, private _router:Router, private _route:ActivatedRoute) { }\n\n  ngOnInit() {\n    console.log('Update onInit');\n    this._route.params.subscribe((data)=>{\n      var id = data.id;\n      console.log('Product id is: ', id );\n      var tempObservable = this._httpService.findProd(id);\n      tempObservable.subscribe((data:any)=>{\n        console.log('got a response from findProd', data);\n        this.product = data;\n     })\n    })\n  }\n  fixProd(){\n    console.log('fixProd invoked by update component');\n    var tempObservable = this._httpService.updateProd(this.product._id, this.product);\n    tempObservable.subscribe((data:any)=>{\n      console.log('got data', data);\n      this._router.navigate(['/']);\n    })\n  }\n  reset(){\n    console.log('reset');\n    this.ngOnInit();\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}